// Code generated by protoc-gen-go. DO NOT EDIT.
// source: token/expectations.proto

package token // import "github.com/hyperledger/fabric/protos/token"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TokenExpectation represent the belief that someone should achieve in terms of a token action
type TokenExpectation struct {
	// Types that are valid to be assigned to Expectation:
	//	*TokenExpectation_PlainExpectation
	Expectation          isTokenExpectation_Expectation `protobuf_oneof:"Expectation"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TokenExpectation) Reset()         { *m = TokenExpectation{} }
func (m *TokenExpectation) String() string { return proto.CompactTextString(m) }
func (*TokenExpectation) ProtoMessage()    {}
func (*TokenExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_expectations_eb0519e289bbe77f, []int{0}
}
func (m *TokenExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenExpectation.Unmarshal(m, b)
}
func (m *TokenExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenExpectation.Marshal(b, m, deterministic)
}
func (dst *TokenExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenExpectation.Merge(dst, src)
}
func (m *TokenExpectation) XXX_Size() int {
	return xxx_messageInfo_TokenExpectation.Size(m)
}
func (m *TokenExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_TokenExpectation proto.InternalMessageInfo

type isTokenExpectation_Expectation interface {
	isTokenExpectation_Expectation()
}

type TokenExpectation_PlainExpectation struct {
	PlainExpectation *PlainExpectation `protobuf:"bytes,1,opt,name=plain_expectation,json=plainExpectation,proto3,oneof"`
}

func (*TokenExpectation_PlainExpectation) isTokenExpectation_Expectation() {}

func (m *TokenExpectation) GetExpectation() isTokenExpectation_Expectation {
	if m != nil {
		return m.Expectation
	}
	return nil
}

func (m *TokenExpectation) GetPlainExpectation() *PlainExpectation {
	if x, ok := m.GetExpectation().(*TokenExpectation_PlainExpectation); ok {
		return x.PlainExpectation
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TokenExpectation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TokenExpectation_OneofMarshaler, _TokenExpectation_OneofUnmarshaler, _TokenExpectation_OneofSizer, []interface{}{
		(*TokenExpectation_PlainExpectation)(nil),
	}
}

func _TokenExpectation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TokenExpectation)
	// Expectation
	switch x := m.Expectation.(type) {
	case *TokenExpectation_PlainExpectation:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PlainExpectation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TokenExpectation.Expectation has unexpected type %T", x)
	}
	return nil
}

func _TokenExpectation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TokenExpectation)
	switch tag {
	case 1: // Expectation.plain_expectation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlainExpectation)
		err := b.DecodeMessage(msg)
		m.Expectation = &TokenExpectation_PlainExpectation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TokenExpectation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TokenExpectation)
	// Expectation
	switch x := m.Expectation.(type) {
	case *TokenExpectation_PlainExpectation:
		s := proto.Size(x.PlainExpectation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// PlainExpectation represent the plain expectation where no confidentiality is provided.
type PlainExpectation struct {
	// Types that are valid to be assigned to Payload:
	//	*PlainExpectation_ImportExpectation
	//	*PlainExpectation_TransferExpectation
	Payload              isPlainExpectation_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PlainExpectation) Reset()         { *m = PlainExpectation{} }
func (m *PlainExpectation) String() string { return proto.CompactTextString(m) }
func (*PlainExpectation) ProtoMessage()    {}
func (*PlainExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_expectations_eb0519e289bbe77f, []int{1}
}
func (m *PlainExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlainExpectation.Unmarshal(m, b)
}
func (m *PlainExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlainExpectation.Marshal(b, m, deterministic)
}
func (dst *PlainExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlainExpectation.Merge(dst, src)
}
func (m *PlainExpectation) XXX_Size() int {
	return xxx_messageInfo_PlainExpectation.Size(m)
}
func (m *PlainExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_PlainExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_PlainExpectation proto.InternalMessageInfo

type isPlainExpectation_Payload interface {
	isPlainExpectation_Payload()
}

type PlainExpectation_ImportExpectation struct {
	ImportExpectation *PlainTokenExpectation `protobuf:"bytes,1,opt,name=import_expectation,json=importExpectation,proto3,oneof"`
}

type PlainExpectation_TransferExpectation struct {
	TransferExpectation *PlainTokenExpectation `protobuf:"bytes,2,opt,name=transfer_expectation,json=transferExpectation,proto3,oneof"`
}

func (*PlainExpectation_ImportExpectation) isPlainExpectation_Payload() {}

func (*PlainExpectation_TransferExpectation) isPlainExpectation_Payload() {}

func (m *PlainExpectation) GetPayload() isPlainExpectation_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PlainExpectation) GetImportExpectation() *PlainTokenExpectation {
	if x, ok := m.GetPayload().(*PlainExpectation_ImportExpectation); ok {
		return x.ImportExpectation
	}
	return nil
}

func (m *PlainExpectation) GetTransferExpectation() *PlainTokenExpectation {
	if x, ok := m.GetPayload().(*PlainExpectation_TransferExpectation); ok {
		return x.TransferExpectation
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*PlainExpectation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _PlainExpectation_OneofMarshaler, _PlainExpectation_OneofUnmarshaler, _PlainExpectation_OneofSizer, []interface{}{
		(*PlainExpectation_ImportExpectation)(nil),
		(*PlainExpectation_TransferExpectation)(nil),
	}
}

func _PlainExpectation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*PlainExpectation)
	// payload
	switch x := m.Payload.(type) {
	case *PlainExpectation_ImportExpectation:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ImportExpectation); err != nil {
			return err
		}
	case *PlainExpectation_TransferExpectation:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferExpectation); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("PlainExpectation.Payload has unexpected type %T", x)
	}
	return nil
}

func _PlainExpectation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*PlainExpectation)
	switch tag {
	case 1: // payload.import_expectation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlainTokenExpectation)
		err := b.DecodeMessage(msg)
		m.Payload = &PlainExpectation_ImportExpectation{msg}
		return true, err
	case 2: // payload.transfer_expectation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PlainTokenExpectation)
		err := b.DecodeMessage(msg)
		m.Payload = &PlainExpectation_TransferExpectation{msg}
		return true, err
	default:
		return false, nil
	}
}

func _PlainExpectation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*PlainExpectation)
	// payload
	switch x := m.Payload.(type) {
	case *PlainExpectation_ImportExpectation:
		s := proto.Size(x.ImportExpectation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *PlainExpectation_TransferExpectation:
		s := proto.Size(x.TransferExpectation)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// PlainTokenExpectation represents the expecation that
// certain outputs will be matched
type PlainTokenExpectation struct {
	// Outputs contains the expected outputs
	Outputs              []*PlainOutput `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PlainTokenExpectation) Reset()         { *m = PlainTokenExpectation{} }
func (m *PlainTokenExpectation) String() string { return proto.CompactTextString(m) }
func (*PlainTokenExpectation) ProtoMessage()    {}
func (*PlainTokenExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_expectations_eb0519e289bbe77f, []int{2}
}
func (m *PlainTokenExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlainTokenExpectation.Unmarshal(m, b)
}
func (m *PlainTokenExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlainTokenExpectation.Marshal(b, m, deterministic)
}
func (dst *PlainTokenExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlainTokenExpectation.Merge(dst, src)
}
func (m *PlainTokenExpectation) XXX_Size() int {
	return xxx_messageInfo_PlainTokenExpectation.Size(m)
}
func (m *PlainTokenExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_PlainTokenExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_PlainTokenExpectation proto.InternalMessageInfo

func (m *PlainTokenExpectation) GetOutputs() []*PlainOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func init() {
	proto.RegisterType((*TokenExpectation)(nil), "token.TokenExpectation")
	proto.RegisterType((*PlainExpectation)(nil), "token.PlainExpectation")
	proto.RegisterType((*PlainTokenExpectation)(nil), "token.PlainTokenExpectation")
}

func init() {
	proto.RegisterFile("token/expectations.proto", fileDescriptor_expectations_eb0519e289bbe77f)
}

var fileDescriptor_expectations_eb0519e289bbe77f = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0x57, 0x45, 0x87, 0x29, 0x42, 0x17, 0x95, 0x95, 0x21, 0x38, 0xea, 0xcb, 0x10, 0x49,
	0x60, 0xfe, 0x83, 0xc1, 0x64, 0x2f, 0xa2, 0x2b, 0x3e, 0xf9, 0x22, 0x69, 0x97, 0x76, 0xc1, 0xb6,
	0x09, 0xc9, 0x2d, 0xb8, 0x5f, 0xe7, 0x5f, 0x93, 0x26, 0x0c, 0x63, 0xd9, 0xc3, 0x1e, 0x73, 0xcf,
	0x39, 0xdf, 0xc9, 0xe5, 0xa2, 0x18, 0xe4, 0x17, 0x6f, 0x28, 0xff, 0x56, 0x3c, 0x07, 0x06, 0x42,
	0x36, 0x86, 0x28, 0x2d, 0x41, 0xe2, 0x33, 0xab, 0x4c, 0xee, 0x4a, 0x29, 0xcb, 0x8a, 0x53, 0x3b,
	0xcc, 0xda, 0x82, 0x82, 0xa8, 0xb9, 0x01, 0x56, 0x2b, 0xe7, 0x9b, 0x8c, 0x1d, 0x01, 0x34, 0x6b,
	0x0c, 0xcb, 0x3b, 0x82, 0x13, 0x12, 0x81, 0xa2, 0xf7, 0x4e, 0x5a, 0xfe, 0xb1, 0xf1, 0x33, 0x1a,
	0xa9, 0x8a, 0x89, 0xe6, 0xd3, 0x2b, 0x8c, 0x83, 0x69, 0x30, 0x0b, 0xe7, 0x63, 0x62, 0x41, 0xe4,
	0xad, 0xd3, 0xbd, 0xcc, 0x6a, 0x90, 0x46, 0xaa, 0x37, 0x5b, 0x5c, 0xa2, 0xd0, 0x7b, 0x26, 0x3f,
	0x01, 0x8a, 0xfa, 0x39, 0xfc, 0x82, 0xb0, 0xa8, 0x95, 0xd4, 0x70, 0xa0, 0xec, 0xd6, 0x2f, 0xeb,
	0xff, 0x72, 0x35, 0x48, 0x47, 0x2e, 0xe9, 0xe3, 0xd6, 0xe8, 0xda, 0xee, 0x58, 0x70, 0xfd, 0x0f,
	0x78, 0x72, 0x14, 0xf0, 0x6a, 0x9f, 0xf5, 0xb7, 0xb8, 0x40, 0x43, 0xc5, 0x76, 0x95, 0x64, 0x9b,
	0x64, 0x89, 0x6e, 0x0e, 0x46, 0xf1, 0x23, 0x1a, 0xca, 0x16, 0x54, 0x0b, 0x26, 0x0e, 0xa6, 0xa7,
	0xb3, 0x70, 0x8e, 0xfd, 0xa6, 0x57, 0x2b, 0xa5, 0x7b, 0xcb, 0x62, 0x8d, 0xee, 0xa5, 0x2e, 0xc9,
	0x76, 0xa7, 0xb8, 0xae, 0xf8, 0xa6, 0xe4, 0x9a, 0x14, 0x2c, 0xd3, 0x22, 0x77, 0x37, 0x31, 0x2e,
	0xfb, 0xf1, 0x50, 0x0a, 0xd8, 0xb6, 0x19, 0xc9, 0x65, 0x4d, 0x3d, 0x2f, 0x75, 0x5e, 0x77, 0x6b,
	0x43, 0xad, 0x37, 0x3b, 0xb7, 0xaf, 0xa7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0x1f, 0x52,
	0x91, 0x2a, 0x02, 0x00, 0x00,
}
